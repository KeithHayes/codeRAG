#blocked = #ttg.blocked<{sizePerThread = [1, 8], threadsPerWarp = [8, 4], warpsPerCTA = [4, 1], order = [1, 0]}>
#blocked1 = #ttg.blocked<{sizePerThread = [1, 1], threadsPerWarp = [8, 4], warpsPerCTA = [4, 1], order = [1, 0]}>
#blocked2 = #ttg.blocked<{sizePerThread = [1, 8], threadsPerWarp = [32, 1], warpsPerCTA = [4, 1], order = [1, 0]}>
#blocked3 = #ttg.blocked<{sizePerThread = [1, 1, 2], threadsPerWarp = [8, 4, 1], warpsPerCTA = [4, 1, 1], order = [2, 1, 0]}>
#blocked4 = #ttg.blocked<{sizePerThread = [1, 2], threadsPerWarp = [8, 4], warpsPerCTA = [4, 1], order = [1, 0]}>
#blocked5 = #ttg.blocked<{sizePerThread = [1, 2, 2], threadsPerWarp = [8, 4, 1], warpsPerCTA = [4, 1, 1], order = [2, 1, 0]}>
#blocked6 = #ttg.blocked<{sizePerThread = [1, 4], threadsPerWarp = [8, 4], warpsPerCTA = [4, 1], order = [1, 0]}>
#blocked7 = #ttg.blocked<{sizePerThread = [1, 4, 2], threadsPerWarp = [8, 4, 1], warpsPerCTA = [4, 1, 1], order = [2, 1, 0]}>
#linear = #ttg.linear<{register = [[0, 1], [1, 0], [2, 0]], lane = [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], warp = [[0, 0], [0, 0]], block = []}>
#loc = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":128:0)
#mma = #ttg.nvidia_mma<{versionMajor = 2, versionMinor = 0, warpsPerCTA = [2, 2], instrShape = [16, 8]}>
#shared = #ttg.swizzled_shared<{vec = 16, perPhase = 4, maxPhase = 2, order = [1, 0]}>
#shared1 = #ttg.swizzled_shared<{vec = 1, perPhase = 1, maxPhase = 1, order = [1, 0]}>
#shared2 = #ttg.swizzled_shared<{vec = 8, perPhase = 4, maxPhase = 4, order = [1, 0]}>
#smem = #ttg.shared_memory
module attributes {"ttg.num-ctas" = 1 : i32, "ttg.num-warps" = 4 : i32, ttg.target = "cuda:86", "ttg.threads-per-warp" = 32 : i32} {
  tt.func public @awq_gemm_kernel(%arg0: !tt.ptr<f16> {tt.divisibility = 16 : i32} loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":128:0), %arg1: !tt.ptr<i32> {tt.divisibility = 16 : i32} loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":128:0), %arg2: !tt.ptr<f16> {tt.divisibility = 16 : i32} loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":128:0), %arg3: !tt.ptr<i32> {tt.divisibility = 16 : i32} loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":128:0), %arg4: !tt.ptr<f16> {tt.divisibility = 16 : i32} loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":128:0), %arg5: i32 loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":128:0), %arg6: i32 {tt.divisibility = 16 : i32} loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":128:0), %arg7: i32 {tt.divisibility = 16 : i32} loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":128:0), %arg8: i32 {tt.divisibility = 16 : i32} loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":128:0)) attributes {noinline = false} {
    %c2_i32 = arith.constant 2 : i32 loc(#loc1)
    %c-1_i32 = arith.constant -1 : i32 loc(#loc1)
    %cst = arith.constant dense<256> : tensor<32x32xi32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<256> : tensor<32xi32, #ttg.slice<{dim = 1, parent = #blocked1}>> loc(#loc1)
    %cst_1 = arith.constant dense<256> : tensor<32xi32, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc1)
    %cst_2 = arith.constant dense<4> : tensor<8xi32, #ttg.slice<{dim = 0, parent = #blocked2}>> loc(#loc1)
    %cst_3 = arith.constant dense<4> : tensor<2xi32, #ttg.slice<{dim = 0, parent = #linear}>> loc(#loc1)
    %c4_i32 = arith.constant 4 : i32 loc(#loc1)
    %c32_i32 = arith.constant 32 : i32 loc(#loc1)
    %c8_i32 = arith.constant 8 : i32 loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c31_i32 = arith.constant 31 : i32 loc(#loc1)
    %c255_i32 = arith.constant 255 : i32 loc(#loc1)
    %cst_4 = arith.constant dense<15> : tensor<32x32xi32, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<0.000000e+00> : tensor<32x32xf16, #mma> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = tt.get_program_id y : i32 loc(#loc3)
    %2 = arith.addi %arg6, %c31_i32 : i32 loc(#loc102)
    %3 = arith.divsi %2, %c32_i32 : i32 loc(#loc103)
    %4 = arith.divsi %0, %3 : i32 loc(#loc7)
    %5 = arith.remsi %0, %3 : i32 loc(#loc8)
    %6 = tt.make_range {end = 2 : i32, start = 0 : i32} : tensor<2xi32, #ttg.slice<{dim = 0, parent = #linear}>> loc(#loc9)
    %7 = arith.muli %6, %cst_3 : tensor<2xi32, #ttg.slice<{dim = 0, parent = #linear}>> loc(#loc10)
    %8 = tt.expand_dims %7 {axis = 0 : i32} : tensor<2xi32, #ttg.slice<{dim = 0, parent = #linear}>> -> tensor<1x2xi32, #linear> loc(#loc11)
    %9 = tt.make_range {end = 4 : i32, start = 0 : i32} : tensor<4xi32, #ttg.slice<{dim = 0, parent = #blocked1}>> loc(#loc12)
    %10 = tt.make_range {end = 4 : i32, start = 0 : i32} : tensor<4xi32, #ttg.slice<{dim = 1, parent = #linear}>> loc(#loc13)
    %11 = tt.expand_dims %10 {axis = 1 : i32} : tensor<4xi32, #ttg.slice<{dim = 1, parent = #linear}>> -> tensor<4x1xi32, #linear> loc(#loc13)
    %12 = tt.broadcast %8 : tensor<1x2xi32, #linear> -> tensor<4x2xi32, #linear> loc(#loc14)
    %13 = tt.broadcast %11 : tensor<4x1xi32, #linear> -> tensor<4x2xi32, #linear> loc(#loc14)
    %14 = arith.addi %12, %13 : tensor<4x2xi32, #linear> loc(#loc14)
    %15 = tt.reshape %14 : tensor<4x2xi32, #linear> -> tensor<8xi32, #ttg.slice<{dim = 0, parent = #blocked2}>> loc(#loc15)
    %16 = arith.muli %15, %cst_2 : tensor<8xi32, #ttg.slice<{dim = 0, parent = #blocked2}>> loc(#loc16)
    %17 = tt.expand_dims %16 {axis = 0 : i32} : tensor<8xi32, #ttg.slice<{dim = 0, parent = #blocked2}>> -> tensor<1x8xi32, #blocked2> loc(#loc17)
    %18 = tt.broadcast %17 : tensor<1x8xi32, #blocked2> -> tensor<128x8xi32, #blocked2> loc(#loc18)
    %19 = tt.reshape %18 : tensor<128x8xi32, #blocked2> -> tensor<32x32xi32, #blocked> loc(#loc19)
    %20 = arith.muli %4, %c32_i32 : i32 loc(#loc20)
    %21 = tt.make_range {end = 32 : i32, start = 0 : i32} : tensor<32xi32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc21)
    %22 = tt.make_range {end = 32 : i32, start = 0 : i32} : tensor<32xi32, #ttg.slice<{dim = 1, parent = #blocked1}>> loc(#loc21)
    %23 = tt.make_range {end = 32 : i32, start = 0 : i32} : tensor<32xi32, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc21)
    %24 = tt.splat %20 : i32 -> tensor<32xi32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc22)
    %25 = arith.addi %24, %21 : tensor<32xi32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc22)
    %26 = tt.splat %arg5 : i32 -> tensor<32xi32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc23)
    %27 = arith.cmpi slt, %25, %26 : tensor<32xi32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc23)
    %28 = arith.muli %5, %c4_i32 : i32 loc(#loc24)
    %29 = tt.splat %28 : i32 -> tensor<4xi32, #ttg.slice<{dim = 0, parent = #blocked1}>> loc(#loc25)
    %30 = arith.addi %29, %9 : tensor<4xi32, #ttg.slice<{dim = 0, parent = #blocked1}>> loc(#loc25)
    %31 = arith.divsi %arg6, %c8_i32 : i32 loc(#loc26)
    %32 = tt.splat %31 : i32 -> tensor<4xi32, #ttg.slice<{dim = 0, parent = #blocked1}>> loc(#loc27)
    %33 = arith.cmpi slt, %30, %32 : tensor<4xi32, #ttg.slice<{dim = 0, parent = #blocked1}>> loc(#loc27)
    %34 = arith.muli %5, %c32_i32 : i32 loc(#loc28)
    %35 = tt.splat %34 : i32 -> tensor<32xi32, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc29)
    %36 = arith.addi %35, %23 : tensor<32xi32, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc29)
    %37 = tt.splat %arg6 : i32 -> tensor<32xi32, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc30)
    %38 = arith.cmpi slt, %36, %37 : tensor<32xi32, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc30)
    %39 = arith.muli %1, %c32_i32 : i32 loc(#loc31)
    %40 = tt.splat %39 : i32 -> tensor<32xi32, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc32)
    %41 = tt.splat %39 : i32 -> tensor<32xi32, #ttg.slice<{dim = 1, parent = #blocked1}>> loc(#loc32)
    %42 = arith.addi %40, %23 : tensor<32xi32, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc32)
    %43 = arith.addi %41, %22 : tensor<32xi32, #ttg.slice<{dim = 1, parent = #blocked1}>> loc(#loc32)
    %44 = tt.expand_dims %25 {axis = 1 : i32} : tensor<32xi32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<32x1xi32, #blocked> loc(#loc33)
    %45 = tt.splat %arg7 : i32 -> tensor<32x1xi32, #blocked> loc(#loc34)
    %46 = arith.muli %45, %44 : tensor<32x1xi32, #blocked> loc(#loc34)
    %47 = tt.expand_dims %42 {axis = 0 : i32} : tensor<32xi32, #ttg.slice<{dim = 0, parent = #blocked}>> -> tensor<1x32xi32, #blocked> loc(#loc35)
    %48 = tt.broadcast %46 : tensor<32x1xi32, #blocked> -> tensor<32x32xi32, #blocked> loc(#loc36)
    %49 = tt.broadcast %47 : tensor<1x32xi32, #blocked> -> tensor<32x32xi32, #blocked> loc(#loc36)
    %50 = arith.addi %48, %49 : tensor<32x32xi32, #blocked> loc(#loc36)
    %51 = tt.expand_dims %43 {axis = 1 : i32} : tensor<32xi32, #ttg.slice<{dim = 1, parent = #blocked1}>> -> tensor<32x1xi32, #blocked1> loc(#loc37)
    %52 = tt.splat %31 : i32 -> tensor<32x1xi32, #blocked1> loc(#loc38)
    %53 = arith.muli %52, %51 : tensor<32x1xi32, #blocked1> loc(#loc38)
    %54 = tt.expand_dims %30 {axis = 0 : i32} : tensor<4xi32, #ttg.slice<{dim = 0, parent = #blocked1}>> -> tensor<1x4xi32, #blocked1> loc(#loc39)
    %55 = tt.broadcast %53 : tensor<32x1xi32, #blocked1> -> tensor<32x4xi32, #blocked1> loc(#loc40)
    %56 = tt.broadcast %54 : tensor<1x4xi32, #blocked1> -> tensor<32x4xi32, #blocked1> loc(#loc40)
    %57 = arith.addi %55, %56 : tensor<32x4xi32, #blocked1> loc(#loc40)
    %58 = tt.splat %arg0 : !tt.ptr<f16> -> tensor<32x32x!tt.ptr<f16>, #blocked> loc(#loc41)
    %59 = tt.addptr %58, %50 : tensor<32x32x!tt.ptr<f16>, #blocked>, tensor<32x32xi32, #blocked> loc(#loc41)
    %60 = tt.splat %arg1 : !tt.ptr<i32> -> tensor<32x4x!tt.ptr<i32>, #blocked1> loc(#loc42)
    %61 = tt.addptr %60, %57 : tensor<32x4x!tt.ptr<i32>, #blocked1>, tensor<32x4xi32, #blocked1> loc(#loc42)
    %62 = arith.addi %arg7, %c255_i32 : i32 loc(#loc104)
    %63 = arith.divsi %62, %c256_i32 : i32 loc(#loc105)
    %64 = tt.splat %arg7 : i32 -> tensor<32xi32, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc44)
    %65 = tt.splat %arg7 : i32 -> tensor<32xi32, #ttg.slice<{dim = 1, parent = #blocked1}>> loc(#loc44)
    %66 = tt.expand_dims %27 {axis = 1 : i32} : tensor<32xi1, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<32x1xi1, #blocked> loc(#loc45)
    %67 = tt.broadcast %66 : tensor<32x1xi1, #blocked> -> tensor<32x32xi1, #blocked> loc(#loc46)
    %68 = tt.expand_dims %33 {axis = 0 : i32} : tensor<4xi1, #ttg.slice<{dim = 0, parent = #blocked1}>> -> tensor<1x4xi1, #blocked1> loc(#loc47)
    %69 = tt.broadcast %68 : tensor<1x4xi1, #blocked1> -> tensor<32x4xi1, #blocked1> loc(#loc48)
    %70 = tt.splat %arg3 : !tt.ptr<i32> -> tensor<1x4x!tt.ptr<i32>, #blocked1> loc(#loc49)
    %71 = tt.expand_dims %36 {axis = 0 : i32} : tensor<32xi32, #ttg.slice<{dim = 0, parent = #blocked}>> -> tensor<1x32xi32, #blocked> loc(#loc50)
    %72 = tt.expand_dims %38 {axis = 0 : i32} : tensor<32xi1, #ttg.slice<{dim = 0, parent = #blocked}>> -> tensor<1x32xi1, #blocked> loc(#loc51)
    %73 = tt.splat %arg4 : !tt.ptr<f16> -> tensor<1x32x!tt.ptr<f16>, #blocked> loc(#loc52)
    %74 = arith.muli %31, %c256_i32 : i32 loc(#loc53)
    %75 = tt.splat %74 : i32 -> tensor<32x4xi32, #blocked1> loc(#loc54)
    %76 = ttg.local_alloc  : () -> !ttg.memdesc<2x32x32xf16, #shared, #smem, mutable> loc(#loc55)
    %77 = ttg.local_alloc  : () -> !ttg.memdesc<2x32x4xi32, #shared1, #smem, mutable> loc(#loc56)
    %78 = ttg.local_alloc  : () -> !ttg.memdesc<2x1x4xi32, #shared1, #smem, mutable> loc(#loc57)
    %79 = ttg.local_alloc  : () -> !ttg.memdesc<2x1x32xf16, #shared1, #smem, mutable> loc(#loc58)
    %80 = arith.cmpi sgt, %63, %c0_i32 : i32 loc(#loc59)
    %81 = arith.cmpi slt, %42, %64 : tensor<32xi32, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc44)
    %82 = arith.cmpi slt, %43, %65 : tensor<32xi32, #ttg.slice<{dim = 1, parent = #blocked1}>> loc(#loc44)
    %83 = tt.expand_dims %81 {axis = 0 : i32} : tensor<32xi1, #ttg.slice<{dim = 0, parent = #blocked}>> -> tensor<1x32xi1, #blocked> loc(#loc60)
    %84 = tt.broadcast %83 : tensor<1x32xi1, #blocked> -> tensor<32x32xi1, #blocked> loc(#loc46)
    %85 = arith.andi %67, %84 : tensor<32x32xi1, #blocked> loc(#loc46)
    %86 = ttg.memdesc_subview %76[%c0_i32, %c0_i32, %c0_i32] : !ttg.memdesc<2x32x32xf16, #shared, #smem, mutable> -> !ttg.memdesc<32x32xf16, #shared, #smem, mutable, 2x32x32> loc(#loc55)
    %87 = tt.splat %80 : i1 -> tensor<32x32xi1, #blocked> loc(#loc59)
    %88 = arith.andi %87, %85 : tensor<32x32xi1, #blocked> loc(#loc59)
    %89 = ttg.async_copy_global_to_local %59, %86 mask %88 : tensor<32x32x!tt.ptr<f16>, #blocked> -> <32x32xf16, #shared, #smem, mutable, 2x32x32> loc(#loc55)
    %90 = ttg.async_commit_group %89 loc(#loc55)
    %91 = tt.expand_dims %82 {axis = 1 : i32} : tensor<32xi1, #ttg.slice<{dim = 1, parent = #blocked1}>> -> tensor<32x1xi1, #blocked1> loc(#loc61)
    %92 = tt.broadcast %91 : tensor<32x1xi1, #blocked1> -> tensor<32x4xi1, #blocked1> loc(#loc48)
    %93 = arith.andi %92, %69 : tensor<32x4xi1, #blocked1> loc(#loc48)
    %94 = ttg.memdesc_subview %77[%c0_i32, %c0_i32, %c0_i32] : !ttg.memdesc<2x32x4xi32, #shared1, #smem, mutable> -> !ttg.memdesc<32x4xi32, #shared1, #smem, mutable, 2x32x4> loc(#loc56)
    %95 = tt.splat %80 : i1 -> tensor<32x4xi1, #blocked1> loc(#loc59)
    %96 = arith.andi %95, %93 : tensor<32x4xi1, #blocked1> loc(#loc59)
    %97 = ttg.async_copy_global_to_local %61, %94 mask %96 : tensor<32x4x!tt.ptr<i32>, #blocked1> -> <32x4xi32, #shared1, #smem, mutable, 2x32x4> loc(#loc56)
    %98 = ttg.async_commit_group %97 loc(#loc56)
    %99 = arith.divsi %39, %arg8 : i32 loc(#loc62)
    %100 = arith.muli %31, %99 : i32 loc(#loc63)
    %101 = tt.splat %100 : i32 -> tensor<1x4xi32, #blocked1> loc(#loc106)
    %102 = arith.addi %101, %54 : tensor<1x4xi32, #blocked1> loc(#loc64)
    %103 = arith.divsi %arg7, %arg8 : i32 loc(#loc65)
    %104 = arith.cmpi slt, %99, %103 : i32 loc(#loc66)
    %105 = tt.splat %104 : i1 -> tensor<1x4xi1, #blocked1> loc(#loc107)
    %106 = arith.andi %105, %68 : tensor<1x4xi1, #blocked1> loc(#loc67)
    %107 = tt.addptr %70, %102 : tensor<1x4x!tt.ptr<i32>, #blocked1>, tensor<1x4xi32, #blocked1> loc(#loc49)
    %108 = ttg.memdesc_subview %78[%c0_i32, %c0_i32, %c0_i32] : !ttg.memdesc<2x1x4xi32, #shared1, #smem, mutable> -> !ttg.memdesc<1x4xi32, #shared1, #smem, mutable, 2x1x4> loc(#loc57)
    %109 = tt.splat %80 : i1 -> tensor<1x4xi1, #blocked1> loc(#loc59)
    %110 = arith.andi %109, %106 : tensor<1x4xi1, #blocked1> loc(#loc59)
    %111 = ttg.async_copy_global_to_local %107, %108 mask %110 : tensor<1x4x!tt.ptr<i32>, #blocked1> -> <1x4xi32, #shared1, #smem, mutable, 2x1x4> loc(#loc57)
    %112 = ttg.async_commit_group %111 loc(#loc57)
    %113 = arith.muli %arg6, %99 : i32 loc(#loc69)
    %114 = tt.splat %113 : i32 -> tensor<1x32xi32, #blocked> loc(#loc108)
    %115 = arith.addi %114, %71 : tensor<1x32xi32, #blocked> loc(#loc70)
    %116 = tt.splat %104 : i1 -> tensor<1x32xi1, #blocked> loc(#loc109)
    %117 = arith.andi %116, %72 : tensor<1x32xi1, #blocked> loc(#loc71)
    %118 = tt.addptr %73, %115 : tensor<1x32x!tt.ptr<f16>, #blocked>, tensor<1x32xi32, #blocked> loc(#loc52)
    %119 = ttg.memdesc_subview %79[%c0_i32, %c0_i32, %c0_i32] : !ttg.memdesc<2x1x32xf16, #shared1, #smem, mutable> -> !ttg.memdesc<1x32xf16, #shared1, #smem, mutable, 2x1x32> loc(#loc58)
    %120 = tt.splat %80 : i1 -> tensor<1x32xi1, #blocked> loc(#loc59)
    %121 = arith.andi %120, %117 : tensor<1x32xi1, #blocked> loc(#loc59)
    %122 = ttg.async_copy_global_to_local %118, %119 mask %121 : tensor<1x32x!tt.ptr<f16>, #blocked> -> <1x32xf16, #shared1, #smem, mutable, 2x1x32> loc(#loc58)
    %123 = ttg.async_commit_group %122 loc(#loc58)
    %124 = arith.cmpi sgt, %63, %c1_i32 : i32 loc(#loc59)
    %125 = arith.addi %42, %cst_1 : tensor<32xi32, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc73)
    %126 = arith.addi %43, %cst_0 : tensor<32xi32, #ttg.slice<{dim = 1, parent = #blocked1}>> loc(#loc73)
    %127 = tt.addptr %59, %cst : tensor<32x32x!tt.ptr<f16>, #blocked>, tensor<32x32xi32, #blocked> loc(#loc74)
    %128 = tt.addptr %61, %75 : tensor<32x4x!tt.ptr<i32>, #blocked1>, tensor<32x4xi32, #blocked1> loc(#loc54)
    %129 = arith.cmpi slt, %125, %64 : tensor<32xi32, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc44)
    %130 = arith.cmpi slt, %126, %65 : tensor<32xi32, #ttg.slice<{dim = 1, parent = #blocked1}>> loc(#loc44)
    %131 = tt.expand_dims %129 {axis = 0 : i32} : tensor<32xi1, #ttg.slice<{dim = 0, parent = #blocked}>> -> tensor<1x32xi1, #blocked> loc(#loc60)
    %132 = tt.broadcast %131 : tensor<1x32xi1, #blocked> -> tensor<32x32xi1, #blocked> loc(#loc46)
    %133 = arith.andi %67, %132 : tensor<32x32xi1, #blocked> loc(#loc46)
    %134 = ttg.memdesc_subview %76[%c1_i32, %c0_i32, %c0_i32] : !ttg.memdesc<2x32x32xf16, #shared, #smem, mutable> -> !ttg.memdesc<32x32xf16, #shared, #smem, mutable, 2x32x32> loc(#loc55)
    %135 = tt.splat %124 : i1 -> tensor<32x32xi1, #blocked> loc(#loc59)
    %136 = arith.andi %135, %133 : tensor<32x32xi1, #blocked> loc(#loc59)
    %137 = ttg.async_copy_global_to_local %127, %134 mask %136 : tensor<32x32x!tt.ptr<f16>, #blocked> -> <32x32xf16, #shared, #smem, mutable, 2x32x32> loc(#loc55)
    %138 = ttg.async_commit_group %137 loc(#loc55)
    %139 = tt.expand_dims %130 {axis = 1 : i32} : tensor<32xi1, #ttg.slice<{dim = 1, parent = #blocked1}>> -> tensor<32x1xi1, #blocked1> loc(#loc61)
    %140 = tt.broadcast %139 : tensor<32x1xi1, #blocked1> -> tensor<32x4xi1, #blocked1> loc(#loc48)
    %141 = arith.andi %140, %69 : tensor<32x4xi1, #blocked1> loc(#loc48)
    %142 = ttg.memdesc_subview %77[%c1_i32, %c0_i32, %c0_i32] : !ttg.memdesc<2x32x4xi32, #shared1, #smem, mutable> -> !ttg.memdesc<32x4xi32, #shared1, #smem, mutable, 2x32x4> loc(#loc56)
    %143 = tt.splat %124 : i1 -> tensor<32x4xi1, #blocked1> loc(#loc59)
    %144 = arith.andi %143, %141 : tensor<32x4xi1, #blocked1> loc(#loc59)
    %145 = ttg.async_copy_global_to_local %128, %142 mask %144 : tensor<32x4x!tt.ptr<i32>, #blocked1> -> <32x4xi32, #shared1, #smem, mutable, 2x32x4> loc(#loc56)
    %146 = ttg.async_commit_group %145 loc(#loc56)
    %147 = arith.addi %39, %c256_i32 : i32 loc(#loc75)
    %148 = arith.divsi %147, %arg8 : i32 loc(#loc62)
    %149 = arith.muli %31, %148 : i32 loc(#loc63)
    %150 = tt.splat %149 : i32 -> tensor<1x4xi32, #blocked1> loc(#loc106)
    %151 = arith.addi %150, %54 : tensor<1x4xi32, #blocked1> loc(#loc64)
    %152 = arith.cmpi slt, %148, %103 : i32 loc(#loc66)
    %153 = tt.splat %152 : i1 -> tensor<1x4xi1, #blocked1> loc(#loc107)
    %154 = arith.andi %153, %68 : tensor<1x4xi1, #blocked1> loc(#loc67)
    %155 = tt.addptr %70, %151 : tensor<1x4x!tt.ptr<i32>, #blocked1>, tensor<1x4xi32, #blocked1> loc(#loc49)
    %156 = ttg.memdesc_subview %78[%c1_i32, %c0_i32, %c0_i32] : !ttg.memdesc<2x1x4xi32, #shared1, #smem, mutable> -> !ttg.memdesc<1x4xi32, #shared1, #smem, mutable, 2x1x4> loc(#loc57)
    %157 = tt.splat %124 : i1 -> tensor<1x4xi1, #blocked1> loc(#loc59)
    %158 = arith.andi %157, %154 : tensor<1x4xi1, #blocked1> loc(#loc59)
    %159 = ttg.async_copy_global_to_local %155, %156 mask %158 : tensor<1x4x!tt.ptr<i32>, #blocked1> -> <1x4xi32, #shared1, #smem, mutable, 2x1x4> loc(#loc57)
    %160 = ttg.async_commit_group %159 loc(#loc57)
    %161 = arith.muli %arg6, %148 : i32 loc(#loc69)
    %162 = tt.splat %161 : i32 -> tensor<1x32xi32, #blocked> loc(#loc108)
    %163 = arith.addi %162, %71 : tensor<1x32xi32, #blocked> loc(#loc70)
    %164 = tt.splat %152 : i1 -> tensor<1x32xi1, #blocked> loc(#loc109)
    %165 = arith.andi %164, %72 : tensor<1x32xi1, #blocked> loc(#loc71)
    %166 = tt.addptr %73, %163 : tensor<1x32x!tt.ptr<f16>, #blocked>, tensor<1x32xi32, #blocked> loc(#loc52)
    %167 = ttg.memdesc_subview %79[%c1_i32, %c0_i32, %c0_i32] : !ttg.memdesc<2x1x32xf16, #shared1, #smem, mutable> -> !ttg.memdesc<1x32xf16, #shared1, #smem, mutable, 2x1x32> loc(#loc58)
    %168 = tt.splat %124 : i1 -> tensor<1x32xi1, #blocked> loc(#loc59)
    %169 = arith.andi %168, %165 : tensor<1x32xi1, #blocked> loc(#loc59)
    %170 = ttg.async_copy_global_to_local %166, %167 mask %169 : tensor<1x32x!tt.ptr<f16>, #blocked> -> <1x32xf16, #shared1, #smem, mutable, 2x1x32> loc(#loc58)
    %171 = ttg.async_commit_group %170 loc(#loc58)
    %172:13 = scf.for %arg9 = %c0_i32 to %63 step %c1_i32 iter_args(%arg10 = %cst_5, %arg11 = %128, %arg12 = %127, %arg13 = %125, %arg14 = %126, %arg15 = %c1_i32, %arg16 = %c-1_i32, %arg17 = %98, %arg18 = %146, %arg19 = %112, %arg20 = %160, %arg21 = %123, %arg22 = %171) -> (tensor<32x32xf16, #mma>, tensor<32x4x!tt.ptr<i32>, #blocked1>, tensor<32x32x!tt.ptr<f16>, #blocked>, tensor<32xi32, #ttg.slice<{dim = 0, parent = #blocked}>>, tensor<32xi32, #ttg.slice<{dim = 1, parent = #blocked1}>>, i32, i32, !ttg.async.token, !ttg.async.token, !ttg.async.token, !ttg.async.token, !ttg.async.token, !ttg.async.token)  : i32 {
      %190 = arith.subi %63, %c2_i32 : i32 loc(#loc59)
      %191 = arith.cmpi slt, %arg9, %190 : i32 loc(#loc59)
      %192 = arith.addi %arg16, %c1_i32 : i32 loc(#loc59)
      %193 = arith.cmpi slt, %192, %c2_i32 : i32 loc(#loc59)
      %194 = arith.select %193, %192, %c0_i32 : i32 loc(#loc59)
      %195 = ttg.async_wait %arg17, %arg19, %arg21 {num = 4 : i32} loc(#loc55)
      %196 = ttg.memdesc_subview %76[%194, %c0_i32, %c0_i32] : !ttg.memdesc<2x32x32xf16, #shared, #smem, mutable> -> !ttg.memdesc<32x32xf16, #shared, #smem, mutable, 2x32x32> loc(#loc55)
      %197 = ttg.local_load %196 : !ttg.memdesc<32x32xf16, #shared, #smem, mutable, 2x32x32> -> tensor<32x32xf16, #ttg.dot_op<{opIdx = 0, parent = #mma, kWidth = 4}>> loc(#loc55)
      %198 = ttg.memdesc_subview %77[%194, %c0_i32, %c0_i32] : !ttg.memdesc<2x32x4xi32, #shared1, #smem, mutable> -> !ttg.memdesc<32x4xi32, #shared1, #smem, mutable, 2x32x4> loc(#loc56)
      %199 = ttg.local_load %198 token %195 : !ttg.memdesc<32x4xi32, #shared1, #smem, mutable, 2x32x4> -> tensor<32x4xi32, #blocked1> loc(#loc56)
      %200 = tt.join %199, %199 : tensor<32x4xi32, #blocked1> -> tensor<32x4x2xi32, #blocked3> loc(#loc110)
      %201 = tt.reshape %200 : tensor<32x4x2xi32, #blocked3> -> tensor<32x8xi32, #blocked4> loc(#loc111)
      %202 = tt.join %201, %201 : tensor<32x8xi32, #blocked4> -> tensor<32x8x2xi32, #blocked5> loc(#loc112)
      %203 = tt.reshape %202 : tensor<32x8x2xi32, #blocked5> -> tensor<32x16xi32, #blocked6> loc(#loc113)
      %204 = tt.join %203, %203 : tensor<32x16xi32, #blocked6> -> tensor<32x16x2xi32, #blocked7> loc(#loc114)
      %205 = tt.reshape %204 : tensor<32x16x2xi32, #blocked7> -> tensor<32x32xi32, #blocked> loc(#loc115)
      %206 = ttg.memdesc_subview %78[%194, %c0_i32, %c0_i32] : !ttg.memdesc<2x1x4xi32, #shared1, #smem, mutable> -> !ttg.memdesc<1x4xi32, #shared1, #smem, mutable, 2x1x4> loc(#loc57)
      %207 = ttg.local_load %206 token %195 : !ttg.memdesc<1x4xi32, #shared1, #smem, mutable, 2x1x4> -> tensor<1x4xi32, #blocked1> loc(#loc57)
      %208 = tt.join %207, %207 : tensor<1x4xi32, #blocked1> -> tensor<1x4x2xi32, #blocked3> loc(#loc116)
      %209 = tt.reshape %208 : tensor<1x4x2xi32, #blocked3> -> tensor<1x8xi32, #blocked4> loc(#loc117)
      %210 = tt.join %209, %209 : tensor<1x8xi32, #blocked4> -> tensor<1x8x2xi32, #blocked5> loc(#loc118)
      %211 = tt.reshape %210 : tensor<1x8x2xi32, #blocked5> -> tensor<1x16xi32, #blocked6> loc(#loc119)
      %212 = tt.join %211, %211 : tensor<1x16xi32, #blocked6> -> tensor<1x16x2xi32, #blocked7> loc(#loc120)
      %213 = tt.reshape %212 : tensor<1x16x2xi32, #blocked7> -> tensor<1x32xi32, #blocked> loc(#loc121)
      %214 = tt.broadcast %213 : tensor<1x32xi32, #blocked> -> tensor<32x32xi32, #blocked> loc(#loc84)
      %215 = ttg.memdesc_subview %79[%194, %c0_i32, %c0_i32] : !ttg.memdesc<2x1x32xf16, #shared1, #smem, mutable> -> !ttg.memdesc<1x32xf16, #shared1, #smem, mutable, 2x1x32> loc(#loc58)
      %216 = ttg.local_load %215 token %195 : !ttg.memdesc<1x32xf16, #shared1, #smem, mutable, 2x1x32> -> tensor<1x32xf16, #blocked> loc(#loc58)
      %217 = tt.broadcast %216 : tensor<1x32xf16, #blocked> -> tensor<32x32xf16, #blocked> loc(#loc85)
      %218 = arith.shrsi %205, %19 : tensor<32x32xi32, #blocked> loc(#loc86)
      %219 = arith.andi %218, %cst_4 : tensor<32x32xi32, #blocked> loc(#loc87)
      %220 = arith.shrsi %214, %19 : tensor<32x32xi32, #blocked> loc(#loc88)
      %221 = arith.andi %220, %cst_4 : tensor<32x32xi32, #blocked> loc(#loc89)
      %222 = arith.subi %219, %221 : tensor<32x32xi32, #blocked> loc(#loc90)
      %223 = arith.sitofp %222 : tensor<32x32xi32, #blocked> to tensor<32x32xf16, #blocked> loc(#loc91)
      %224 = arith.mulf %223, %217 : tensor<32x32xf16, #blocked> loc(#loc91)
      %225 = ttg.local_alloc %224 : (tensor<32x32xf16, #blocked>) -> !ttg.memdesc<32x32xf16, #shared2, #smem> loc(#loc91)
      %226 = ttg.local_load %225 : !ttg.memdesc<32x32xf16, #shared2, #smem> -> tensor<32x32xf16, #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 4}>> loc(#loc91)
      %227 = tt.dot %197, %226, %arg10, inputPrecision = tf32 : tensor<32x32xf16, #ttg.dot_op<{opIdx = 0, parent = #mma, kWidth = 4}>> * tensor<32x32xf16, #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 4}>> -> tensor<32x32xf16, #mma> loc(#loc92)
      %228 = arith.addi %arg13, %cst_1 : tensor<32xi32, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc73)
      %229 = arith.addi %arg14, %cst_0 : tensor<32xi32, #ttg.slice<{dim = 1, parent = #blocked1}>> loc(#loc73)
      %230 = tt.addptr %arg12, %cst : tensor<32x32x!tt.ptr<f16>, #blocked>, tensor<32x32xi32, #blocked> loc(#loc74)
      %231 = tt.addptr %arg11, %75 : tensor<32x4x!tt.ptr<i32>, #blocked1>, tensor<32x4xi32, #blocked1> loc(#loc54)
      %232 = arith.addi %arg15, %c1_i32 : i32 loc(#loc59)
      %233 = arith.cmpi slt, %232, %c2_i32 : i32 loc(#loc59)
      %234 = arith.select %233, %232, %c0_i32 : i32 loc(#loc59)
      %235 = arith.cmpi slt, %228, %64 : tensor<32xi32, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc44)
      %236 = arith.cmpi slt, %229, %65 : tensor<32xi32, #ttg.slice<{dim = 1, parent = #blocked1}>> loc(#loc44)
      %237 = tt.expand_dims %235 {axis = 0 : i32} : tensor<32xi1, #ttg.slice<{dim = 0, parent = #blocked}>> -> tensor<1x32xi1, #blocked> loc(#loc60)
      %238 = tt.broadcast %237 : tensor<1x32xi1, #blocked> -> tensor<32x32xi1, #blocked> loc(#loc46)
      %239 = arith.andi %67, %238 : tensor<32x32xi1, #blocked> loc(#loc46)
      %240 = ttg.memdesc_subview %76[%234, %c0_i32, %c0_i32] : !ttg.memdesc<2x32x32xf16, #shared, #smem, mutable> -> !ttg.memdesc<32x32xf16, #shared, #smem, mutable, 2x32x32> loc(#loc55)
      %241 = tt.splat %191 : i1 -> tensor<32x32xi1, #blocked> loc(#loc59)
      %242 = arith.andi %241, %239 : tensor<32x32xi1, #blocked> loc(#loc59)
      %243 = ttg.async_copy_global_to_local %230, %240 mask %242 : tensor<32x32x!tt.ptr<f16>, #blocked> -> <32x32xf16, #shared, #smem, mutable, 2x32x32> loc(#loc55)
      %244 = ttg.async_commit_group %243 loc(#loc55)
      %245 = tt.expand_dims %236 {axis = 1 : i32} : tensor<32xi1, #ttg.slice<{dim = 1, parent = #blocked1}>> -> tensor<32x1xi1, #blocked1> loc(#loc61)
      %246 = tt.broadcast %245 : tensor<32x1xi1, #blocked1> -> tensor<32x4xi1, #blocked1> loc(#loc48)
      %247 = arith.andi %246, %69 : tensor<32x4xi1, #blocked1> loc(#loc48)
      %248 = ttg.memdesc_subview %77[%234, %c0_i32, %c0_i32] : !ttg.memdesc<2x32x4xi32, #shared1, #smem, mutable> -> !ttg.memdesc<32x4xi32, #shared1, #smem, mutable, 2x32x4> loc(#loc56)
      %249 = tt.splat %191 : i1 -> tensor<32x4xi1, #blocked1> loc(#loc59)
      %250 = arith.andi %249, %247 : tensor<32x4xi1, #blocked1> loc(#loc59)
      %251 = ttg.async_copy_global_to_local %231, %248 mask %250 : tensor<32x4x!tt.ptr<i32>, #blocked1> -> <32x4xi32, #shared1, #smem, mutable, 2x32x4> loc(#loc56)
      %252 = ttg.async_commit_group %251 loc(#loc56)
      %253 = arith.addi %arg9, %c2_i32 : i32 loc(#loc59)
      %254 = arith.muli %253, %c256_i32 : i32 loc(#loc93)
      %255 = arith.addi %254, %39 : i32 loc(#loc75)
      %256 = arith.divsi %255, %arg8 : i32 loc(#loc62)
      %257 = arith.muli %31, %256 : i32 loc(#loc63)
      %258 = tt.splat %257 : i32 -> tensor<1x4xi32, #blocked1> loc(#loc106)
      %259 = arith.addi %258, %54 : tensor<1x4xi32, #blocked1> loc(#loc64)
      %260 = arith.cmpi slt, %256, %103 : i32 loc(#loc66)
      %261 = tt.splat %260 : i1 -> tensor<1x4xi1, #blocked1> loc(#loc107)
      %262 = arith.andi %261, %68 : tensor<1x4xi1, #blocked1> loc(#loc67)
      %263 = tt.addptr %70, %259 : tensor<1x4x!tt.ptr<i32>, #blocked1>, tensor<1x4xi32, #blocked1> loc(#loc49)
      %264 = ttg.memdesc_subview %78[%234, %c0_i32, %c0_i32] : !ttg.memdesc<2x1x4xi32, #shared1, #smem, mutable> -> !ttg.memdesc<1x4xi32, #shared1, #smem, mutable, 2x1x4> loc(#loc57)
      %265 = tt.splat %191 : i1 -> tensor<1x4xi1, #blocked1> loc(#loc59)
      %266 = arith.andi %265, %262 : tensor<1x4xi1, #blocked1> loc(#loc59)
      %267 = ttg.async_copy_global_to_local %263, %264 mask %266 : tensor<1x4x!tt.ptr<i32>, #blocked1> -> <1x4xi32, #shared1, #smem, mutable, 2x1x4> loc(#loc57)
      %268 = ttg.async_commit_group %267 loc(#loc57)
      %269 = arith.muli %arg6, %256 : i32 loc(#loc69)
      %270 = tt.splat %269 : i32 -> tensor<1x32xi32, #blocked> loc(#loc108)
      %271 = arith.addi %270, %71 : tensor<1x32xi32, #blocked> loc(#loc70)
      %272 = tt.splat %260 : i1 -> tensor<1x32xi1, #blocked> loc(#loc109)
      %273 = arith.andi %272, %72 : tensor<1x32xi1, #blocked> loc(#loc71)
      %274 = tt.addptr %73, %271 : tensor<1x32x!tt.ptr<f16>, #blocked>, tensor<1x32xi32, #blocked> loc(#loc52)
      %275 = ttg.memdesc_subview %79[%234, %c0_i32, %c0_i32] : !ttg.memdesc<2x1x32xf16, #shared1, #smem, mutable> -> !ttg.memdesc<1x32xf16, #shared1, #smem, mutable, 2x1x32> loc(#loc58)
      %276 = tt.splat %191 : i1 -> tensor<1x32xi1, #blocked> loc(#loc59)
      %277 = arith.andi %276, %273 : tensor<1x32xi1, #blocked> loc(#loc59)
      %278 = ttg.async_copy_global_to_local %274, %275 mask %277 : tensor<1x32x!tt.ptr<f16>, #blocked> -> <1x32xf16, #shared1, #smem, mutable, 2x1x32> loc(#loc58)
      %279 = ttg.async_commit_group %278 loc(#loc58)
      scf.yield %227, %231, %230, %228, %229, %234, %194, %arg18, %252, %arg20, %268, %arg22, %279 : tensor<32x32xf16, #mma>, tensor<32x4x!tt.ptr<i32>, #blocked1>, tensor<32x32x!tt.ptr<f16>, #blocked>, tensor<32xi32, #ttg.slice<{dim = 0, parent = #blocked}>>, tensor<32xi32, #ttg.slice<{dim = 1, parent = #blocked1}>>, i32, i32, !ttg.async.token, !ttg.async.token, !ttg.async.token, !ttg.async.token, !ttg.async.token, !ttg.async.token loc(#loc59)
    } loc(#loc59)
    %173 = ttg.async_wait  {num = 0 : i32} loc(#loc59)
    ttg.local_dealloc %79 : !ttg.memdesc<2x1x32xf16, #shared1, #smem, mutable> loc(#loc59)
    ttg.local_dealloc %78 : !ttg.memdesc<2x1x4xi32, #shared1, #smem, mutable> loc(#loc59)
    ttg.local_dealloc %77 : !ttg.memdesc<2x32x4xi32, #shared1, #smem, mutable> loc(#loc59)
    ttg.local_dealloc %76 : !ttg.memdesc<2x32x32xf16, #shared, #smem, mutable> loc(#loc59)
    %174 = tt.splat %arg6 : i32 -> tensor<32x1xi32, #blocked> loc(#loc94)
    %175 = arith.muli %174, %44 : tensor<32x1xi32, #blocked> loc(#loc94)
    %176 = tt.splat %arg2 : !tt.ptr<f16> -> tensor<32x1x!tt.ptr<f16>, #blocked> loc(#loc95)
    %177 = tt.addptr %176, %175 : tensor<32x1x!tt.ptr<f16>, #blocked>, tensor<32x1xi32, #blocked> loc(#loc95)
    %178 = tt.broadcast %177 : tensor<32x1x!tt.ptr<f16>, #blocked> -> tensor<32x32x!tt.ptr<f16>, #blocked> loc(#loc96)
    %179 = tt.broadcast %71 : tensor<1x32xi32, #blocked> -> tensor<32x32xi32, #blocked> loc(#loc96)
    %180 = tt.addptr %178, %179 : tensor<32x32x!tt.ptr<f16>, #blocked>, tensor<32x32xi32, #blocked> loc(#loc96)
    %181 = tt.splat %arg5 : i32 -> tensor<32x1xi32, #blocked> loc(#loc97)
    %182 = arith.cmpi slt, %44, %181 : tensor<32x1xi32, #blocked> loc(#loc97)
    %183 = tt.splat %arg6 : i32 -> tensor<1x32xi32, #blocked> loc(#loc98)
    %184 = arith.cmpi slt, %71, %183 : tensor<1x32xi32, #blocked> loc(#loc98)
    %185 = tt.broadcast %182 : tensor<32x1xi1, #blocked> -> tensor<32x32xi1, #blocked> loc(#loc99)
    %186 = tt.broadcast %184 : tensor<1x32xi1, #blocked> -> tensor<32x32xi1, #blocked> loc(#loc99)
    %187 = arith.andi %185, %186 : tensor<32x32xi1, #blocked> loc(#loc99)
    %188 = ttg.convert_layout %172#0 : tensor<32x32xf16, #mma> -> tensor<32x32xf16, #blocked> loc(#loc100)
    %189 = tt.atomic_rmw fadd, acq_rel, gpu, %180, %188, %187 : (tensor<32x32x!tt.ptr<f16>, #blocked>, tensor<32x32xf16, #blocked>, tensor<32x32xi1, #blocked>) -> tensor<32x32xf16, #blocked> loc(#loc100)
    tt.return loc(#loc101)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":143:24)
#loc3 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":144:26)
#loc4 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/triton/language/standard.py":40:22)
#loc5 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":148:27)
#loc6 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/triton/language/standard.py":40:28)
#loc7 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":150:19)
#loc8 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":151:18)
#loc9 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":166:22)
#loc10 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":166:27)
#loc11 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":166:30)
#loc12 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":166:54)
#loc13 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":166:57)
#loc14 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":166:41)
#loc15 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":167:14)
#loc16 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":170:40)
#loc17 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":171:36)
#loc18 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":171:46)
#loc19 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":172:32)
#loc20 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":175:25)
#loc21 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":175:53)
#loc22 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":175:40)
#loc23 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":176:28)
#loc24 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":178:26)
#loc25 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":178:47)
#loc26 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":179:33)
#loc27 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":179:28)
#loc28 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":184:25)
#loc29 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":184:40)
#loc30 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":185:28)
#loc31 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":187:24)
#loc32 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":187:39)
#loc33 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":188:31)
#loc34 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":188:20)
#loc35 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":188:52)
#loc36 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":188:42)
#loc37 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":189:37)
#loc38 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":189:27)
#loc39 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":189:59)
#loc40 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":189:48)
#loc41 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":191:21)
#loc42 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":192:21)
#loc43 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":197:33)
#loc44 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":198:30)
#loc45 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":199:27)
#loc46 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":199:38)
#loc47 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":202:46)
#loc48 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":202:37)
#loc49 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":215:33)
#loc50 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":222:58)
#loc51 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":224:47)
#loc52 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":225:35)
#loc53 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":239:44)
#loc54 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":239:18)
#loc55 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":200:20)
#loc56 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":203:20)
#loc57 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":216:24)
#loc58 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":226:25)
#loc59 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":197:22)
#loc60 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":199:46)
#loc61 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":202:26)
#loc62 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":211:13)
#loc63 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":212:31)
#loc64 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":212:54)
#loc65 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":213:38)
#loc66 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":213:33)
#loc67 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":214:38)
#loc68 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":214:27)
#loc69 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":222:24)
#loc70 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":222:47)
#loc71 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":224:38)
#loc72 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":224:27)
#loc73 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":237:21)
#loc74 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":238:18)
#loc75 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":210:41)
#loc76 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/triton/language/standard.py":460:21)
#loc77 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":204:29)
#loc78 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/triton/language/standard.py":469:31)
#loc79 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":205:29)
#loc80 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":206:29)
#loc81 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":217:37)
#loc82 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":218:37)
#loc83 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":219:37)
#loc84 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":220:39)
#loc85 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":227:41)
#loc86 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":229:18)
#loc87 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":229:28)
#loc88 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":230:26)
#loc89 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":230:36)
#loc90 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":231:17)
#loc91 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":231:26)
#loc92 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":235:35)
#loc93 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":210:37)
#loc94 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":244:25)
#loc95 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":244:21)
#loc96 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":244:44)
#loc97 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":245:33)
#loc98 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":245:58)
#loc99 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":245:39)
#loc100 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":249:30)
#loc101 = loc("/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py":246:4)
#loc102 = loc(callsite(#loc4 at #loc5))
#loc103 = loc(callsite(#loc6 at #loc5))
#loc104 = loc(callsite(#loc4 at #loc43))
#loc105 = loc(callsite(#loc6 at #loc43))
#loc106 = loc(fused[#loc64, #loc63])
#loc107 = loc(fused[#loc67, #loc68])
#loc108 = loc(fused[#loc70, #loc69])
#loc109 = loc(fused[#loc71, #loc72])
#loc110 = loc(callsite(#loc76 at #loc77))
#loc111 = loc(callsite(#loc78 at #loc77))
#loc112 = loc(callsite(#loc76 at #loc79))
#loc113 = loc(callsite(#loc78 at #loc79))
#loc114 = loc(callsite(#loc76 at #loc80))
#loc115 = loc(callsite(#loc78 at #loc80))
#loc116 = loc(callsite(#loc76 at #loc81))
#loc117 = loc(callsite(#loc78 at #loc81))
#loc118 = loc(callsite(#loc76 at #loc82))
#loc119 = loc(callsite(#loc78 at #loc82))
#loc120 = loc(callsite(#loc76 at #loc83))
#loc121 = loc(callsite(#loc78 at #loc83))
