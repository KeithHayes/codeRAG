//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_86
.address_size 64

	// .globl	awq_gemm_kernel         // -- Begin function awq_gemm_kernel
.extern .shared .align 16 .b8 global_smem[];
                                        // @awq_gemm_kernel
.visible .entry awq_gemm_kernel(
	.param .u64 .ptr .global .align 1 awq_gemm_kernel_param_0,
	.param .u64 .ptr .global .align 1 awq_gemm_kernel_param_1,
	.param .u64 .ptr .global .align 1 awq_gemm_kernel_param_2,
	.param .u64 .ptr .global .align 1 awq_gemm_kernel_param_3,
	.param .u64 .ptr .global .align 1 awq_gemm_kernel_param_4,
	.param .u32 awq_gemm_kernel_param_5,
	.param .u32 awq_gemm_kernel_param_6,
	.param .u32 awq_gemm_kernel_param_7,
	.param .u32 awq_gemm_kernel_param_8,
	.param .u64 .ptr .global .align 1 awq_gemm_kernel_param_9
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<39>;
	.reg .b16 	%rs<83>;
	.reg .b32 	%r<364>;
	.reg .b64 	%rd<49>;
	.loc	1 128 0                         // gemm.py:128:0
$L__func_begin0:
	.loc	1 128 0                         // gemm.py:128:0

// %bb.0:
	ld.param.u32 	%r56, [awq_gemm_kernel_param_8];
	ld.param.u32 	%r55, [awq_gemm_kernel_param_7];
	ld.param.u32 	%r54, [awq_gemm_kernel_param_6];
	ld.param.u32 	%r53, [awq_gemm_kernel_param_5];
	ld.param.u64 	%rd13, [awq_gemm_kernel_param_4];
	ld.param.u64 	%rd12, [awq_gemm_kernel_param_3];
	ld.param.u64 	%rd11, [awq_gemm_kernel_param_2];
	ld.param.u64 	%rd10, [awq_gemm_kernel_param_1];
	ld.param.u64 	%rd9, [awq_gemm_kernel_param_0];
$L__tmp0:
	.loc	1 143 24                        // gemm.py:143:24
	mov.u32 	%r1, %ctaid.x;
	.loc	1 144 26                        // gemm.py:144:26
	mov.u32 	%r73, %ctaid.y;
$L__tmp1:
	.loc	2 40 22                         // standard.py:40:22
	add.s32 	%r74, %r54, 31;
	.loc	2 40 28                         // standard.py:40:28
	shr.s32 	%r75, %r74, 31;
	shr.u32 	%r76, %r75, 27;
	add.s32 	%r77, %r74, %r76;
	shr.s32 	%r78, %r77, 5;
$L__tmp2:
	.loc	1 150 19                        // gemm.py:150:19
	div.s32 	%r80, %r1, %r78;
	.loc	1 151 18                        // gemm.py:151:18
	mul.lo.s32 	%r2, %r80, %r78;
	sub.s32 	%r81, %r1, %r2;
	.loc	1 166 54                        // gemm.py:166:54
	mov.u32 	%r3, %tid.x;
	and.b32  	%r4, %r3, 3;
	.loc	1 175 25                        // gemm.py:175:25
	shl.b32 	%r5, %r80, 5;
	.loc	1 175 53                        // gemm.py:175:53
	and.b32  	%r6, %r3, 4;
	bfe.u32 	%r7, %r3, 2, 1;
	and.b32  	%r8, %r3, 8;
	and.b32  	%r9, %r3, 16;
	shr.u32 	%r10, %r9, 2;
	shr.u32 	%r82, %r3, 2;
	and.b32  	%r11, %r82, 8;
	and.b32  	%r12, %r82, 18;
	or.b32  	%r83, %r12, %r7;
	or.b32  	%r13, %r83, %r10;
	or.b32  	%r84, %r13, %r11;
	shl.b32 	%r14, %r3, 3;
	and.b32  	%r15, %r14, 24;
	.loc	1 175 40                        // gemm.py:175:40
	or.b32  	%r16, %r5, %r84;
	.loc	1 176 28                        // gemm.py:176:28
	setp.lt.s32 	%p5, %r16, %r53;
	.loc	1 178 26                        // gemm.py:178:26
	shl.b32 	%r85, %r81, 2;
	.loc	1 178 47                        // gemm.py:178:47
	or.b32  	%r17, %r85, %r4;
	.loc	1 179 33                        // gemm.py:179:33
	shr.s32 	%r86, %r54, 31;
	shr.u32 	%r87, %r86, 29;
	add.s32 	%r88, %r54, %r87;
	shr.s32 	%r18, %r88, 3;
	.loc	1 179 28                        // gemm.py:179:28
	setp.lt.s32 	%p6, %r17, %r18;
	.loc	1 184 25                        // gemm.py:184:25
	shl.b32 	%r89, %r81, 5;
	.loc	1 184 40                        // gemm.py:184:40
	or.b32  	%r19, %r89, %r15;
	.loc	1 185 28                        // gemm.py:185:28
	setp.lt.s32 	%p7, %r19, %r54;
	.loc	1 187 24                        // gemm.py:187:24
	shl.b32 	%r20, %r73, 5;
	.loc	1 187 39                        // gemm.py:187:39
	or.b32  	%r90, %r15, %r20;
	or.b32  	%r91, %r84, %r20;
	.loc	1 188 42                        // gemm.py:188:42
	mad.lo.s32 	%r92, %r16, %r55, %r90;
	.loc	1 189 48                        // gemm.py:189:48
	mad.lo.s32 	%r93, %r18, %r91, %r17;
	.loc	1 191 21                        // gemm.py:191:21
	mul.wide.s32 	%rd22, %r92, 2;
	add.s64 	%rd14, %rd9, %rd22;
	.loc	1 192 21                        // gemm.py:192:21
	mul.wide.s32 	%rd23, %r93, 4;
	add.s64 	%rd15, %rd10, %rd23;
$L__tmp3:
	.loc	2 40 22                         // standard.py:40:22
	add.s32 	%r94, %r55, 255;
$L__tmp4:
	.loc	1 239 44                        // gemm.py:239:44
	shl.b32 	%r98, %r18, 8;
	.loc	1 197 22                        // gemm.py:197:22
	setp.lt.s32 	%p8, %r94, 256;
	setp.gt.s32 	%p9, %r94, 255;
	.loc	1 198 30                        // gemm.py:198:30
	setp.lt.s32 	%p10, %r90, %r55;
	setp.lt.s32 	%p11, %r91, %r55;
	.loc	1 200 20                        // gemm.py:200:20
	xor.b32  	%r99, %r15, %r9;
	shl.b32 	%r22, %r84, 5;
	or.b32  	%r100, %r22, %r99;
	shl.b32 	%r101, %r100, 1;
	mov.u32 	%r102, global_smem;
	add.s32 	%r57, %r102, %r101;
	selp.b32 	%r103, 16, 0, %p5;
	selp.b32 	%r104, %r103, 0, %p10;
	selp.b32 	%r58, %r104, 0, %p9;
	// begin inline asm
	cp.async.cg.shared.global [ %r57 + 0 ], [ %rd14 + 0 ], 0x10, %r58;
	// end inline asm
	cp.async.commit_group;
	.loc	1 203 20                        // gemm.py:203:20
	shl.b32 	%r105, %r84, 4;
	shl.b32 	%r106, %r4, 2;
	or.b32  	%r107, %r105, %r106;
	add.s32 	%r108, %r102, %r107;
	add.s32 	%r59, %r108, 6144;
	selp.b32 	%r109, 4, 0, %p6;
	selp.b32 	%r110, %r109, 0, %p11;
	selp.b32 	%r60, %r110, 0, %p9;
	// begin inline asm
	cp.async.ca.shared.global [ %r59 + 0 ], [ %rd15 + 0 ], 0x4, %r60;
	// end inline asm
	cp.async.commit_group;
	.loc	1 211 13                        // gemm.py:211:13
	div.s32 	%r111, %r20, %r56;
	.loc	1 212 54                        // gemm.py:212:54
	mad.lo.s32 	%r112, %r111, %r18, %r17;
	.loc	1 213 38                        // gemm.py:213:38
	div.s32 	%r25, %r55, %r56;
	.loc	1 213 33                        // gemm.py:213:33
	setp.lt.s32 	%p12, %r111, %r25;
	.loc	1 215 33                        // gemm.py:215:33
	mul.wide.s32 	%rd24, %r112, 4;
	add.s64 	%rd16, %rd12, %rd24;
	.loc	1 216 24                        // gemm.py:216:24
	add.s32 	%r113, %r102, %r106;
	add.s32 	%r61, %r113, 7296;
	and.b32  	%r27, %r3, 124;
	setp.eq.s32 	%p1, %r27, 0;
	selp.b32 	%r114, 4, 0, %p12;
	selp.b32 	%r115, %r114, 0, %p6;
	selp.b32 	%r62, %r115, 0, %p9;
	// begin inline asm
	@%p1 cp.async.ca.shared.global [ %r61 + 0 ], [ %rd16 + 0 ], 0x4, %r62;
	// end inline asm
	cp.async.commit_group;
	.loc	1 222 47                        // gemm.py:222:47
	mad.lo.s32 	%r116, %r111, %r54, %r19;
	.loc	1 225 35                        // gemm.py:225:35
	mul.wide.s32 	%rd25, %r116, 2;
	add.s64 	%rd17, %rd13, %rd25;
	.loc	1 226 25                        // gemm.py:226:25
	shl.b32 	%r117, %r15, 1;
	add.s32 	%r118, %r102, %r117;
	add.s32 	%r63, %r118, 7168;
	selp.b32 	%r119, 16, 0, %p12;
	selp.b32 	%r120, %r119, 0, %p7;
	selp.b32 	%r64, %r120, 0, %p9;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r63 + 0 ], [ %rd17 + 0 ], 0x10, %r64;
	// end inline asm
	cp.async.commit_group;
	.loc	1 197 22                        // gemm.py:197:22
	setp.gt.s32 	%p13, %r94, 511;
	.loc	1 237 21                        // gemm.py:237:21
	add.s32 	%r121, %r90, 256;
	add.s32 	%r122, %r91, 256;
	.loc	1 238 18                        // gemm.py:238:18
	add.s64 	%rd18, %rd14, 512;
	.loc	1 239 18                        // gemm.py:239:18
	mul.wide.s32 	%rd26, %r98, 4;
	add.s64 	%rd19, %rd15, %rd26;
	.loc	1 198 30                        // gemm.py:198:30
	setp.lt.s32 	%p14, %r121, %r55;
	setp.lt.s32 	%p15, %r122, %r55;
	.loc	1 200 20                        // gemm.py:200:20
	bar.sync 	0;
	add.s32 	%r65, %r57, 2048;
	selp.b32 	%r123, %r103, 0, %p14;
	selp.b32 	%r66, %r123, 0, %p13;
	// begin inline asm
	cp.async.cg.shared.global [ %r65 + 0 ], [ %rd18 + 0 ], 0x10, %r66;
	// end inline asm
	cp.async.commit_group;
	.loc	1 203 20                        // gemm.py:203:20
	add.s32 	%r67, %r108, 6656;
	selp.b32 	%r124, %r109, 0, %p15;
	selp.b32 	%r68, %r124, 0, %p13;
	// begin inline asm
	cp.async.ca.shared.global [ %r67 + 0 ], [ %rd19 + 0 ], 0x4, %r68;
	// end inline asm
	cp.async.commit_group;
	.loc	1 210 41                        // gemm.py:210:41
	add.s32 	%r125, %r20, 256;
	.loc	1 211 13                        // gemm.py:211:13
	div.s32 	%r126, %r125, %r56;
	.loc	1 212 54                        // gemm.py:212:54
	mad.lo.s32 	%r127, %r126, %r18, %r17;
	.loc	1 213 33                        // gemm.py:213:33
	setp.lt.s32 	%p16, %r126, %r25;
	.loc	1 215 33                        // gemm.py:215:33
	mul.wide.s32 	%rd27, %r127, 4;
	add.s64 	%rd20, %rd12, %rd27;
	.loc	1 216 24                        // gemm.py:216:24
	add.s32 	%r69, %r113, 7312;
	selp.b32 	%r128, 4, 0, %p16;
	selp.b32 	%r129, %r128, 0, %p6;
	selp.b32 	%r70, %r129, 0, %p13;
	// begin inline asm
	@%p1 cp.async.ca.shared.global [ %r69 + 0 ], [ %rd20 + 0 ], 0x4, %r70;
	// end inline asm
	cp.async.commit_group;
	.loc	1 222 47                        // gemm.py:222:47
	mad.lo.s32 	%r130, %r126, %r54, %r19;
	.loc	1 225 35                        // gemm.py:225:35
	mul.wide.s32 	%rd28, %r130, 2;
	add.s64 	%rd21, %rd13, %rd28;
	.loc	1 226 25                        // gemm.py:226:25
	add.s32 	%r71, %r118, 7232;
	selp.b32 	%r131, 16, 0, %p16;
	selp.b32 	%r132, %r131, 0, %p7;
	selp.b32 	%r72, %r132, 0, %p13;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r71 + 0 ], [ %rd21 + 0 ], 0x10, %r72;
	// end inline asm
	cp.async.commit_group;
	mov.b16 	%rs75, 0;
	mov.u16 	%rs76, %rs75;
	mov.u16 	%rs77, %rs75;
	mov.u16 	%rs78, %rs75;
	mov.u16 	%rs79, %rs75;
	mov.u16 	%rs80, %rs75;
	mov.u16 	%rs81, %rs75;
	mov.u16 	%rs82, %rs75;
	.loc	1 197 22                        // gemm.py:197:22
	@%p8 bra 	$L__BB0_3;
// %bb.1:                               // %.lr.ph
	.loc	1 0 0                           // gemm.py:0:0
	shr.s32 	%r95, %r94, 31;
	shr.u32 	%r96, %r95, 24;
	add.s32 	%r97, %r94, %r96;
	shr.s32 	%r21, %r97, 8;
	cvt.s64.s32 	%rd1, %r98;
	.loc	1 175 53                        // gemm.py:175:53
	and.b32  	%r136, %r14, 16;
	and.b32  	%r137, %r14, 8;
	shr.u32 	%r138, %r8, 2;
	.loc	1 197 22                        // gemm.py:197:22
	or.b32  	%r139, %r10, %r15;
	add.s32 	%r29, %r21, -2;
	shl.b32 	%r140, %r3, 2;
	and.b32  	%r141, %r140, 12;
	or.b32  	%r30, %r141, %r9;
	shl.b32 	%r31, %r13, 5;
	or.b32  	%r32, %r31, %r30;
	or.b32  	%r142, %r141, 16;
	xor.b32  	%r33, %r142, %r9;
	or.b32  	%r34, %r31, %r33;
	shr.u32 	%r143, %r3, 1;
	xor.b32  	%r144, %r14, %r143;
	and.b32  	%r145, %r144, 24;
	or.b32  	%r146, %r22, %r145;
	shl.b32 	%r147, %r146, 1;
	add.s32 	%r149, %r102, 4096;
	add.s32 	%r35, %r149, %r147;
	or.b32  	%r150, %r7, %r139;
	or.b32  	%r151, %r150, %r138;
	xor.b32  	%r152, %r151, %r11;
	shl.b32 	%r153, %r141, 5;
	or.b32  	%r154, %r152, %r153;
	shl.b32 	%r155, %r154, 1;
	add.s32 	%r36, %r149, %r155;
	shl.b32 	%r156, %r142, 5;
	or.b32  	%r157, %r152, %r156;
	shl.b32 	%r158, %r157, 1;
	add.s32 	%r38, %r149, %r158;
	or.b32  	%r159, %r137, 16;
	xor.b32  	%r160, %r159, %r136;
	or.b32  	%r161, %r7, %r160;
	or.b32  	%r162, %r161, %r138;
	or.b32  	%r163, %r162, %r10;
	xor.b32  	%r164, %r163, %r11;
	add.s32 	%r165, %r164, %r153;
	shl.b32 	%r166, %r165, 1;
	add.s32 	%r39, %r149, %r166;
	add.s32 	%r167, %r164, %r156;
	shl.b32 	%r168, %r167, 1;
	add.s32 	%r40, %r149, %r168;
	add.s32 	%r359, %r20, 512;
	add.s32 	%r169, %r12, %r20;
	add.s32 	%r170, %r169, %r11;
	add.s32 	%r171, %r170, %r10;
	add.s32 	%r172, %r171, %r7;
	add.s32 	%r360, %r172, 512;
	add.s32 	%r173, %r12, %r5;
	add.s32 	%r174, %r173, %r11;
	add.s32 	%r175, %r174, %r10;
	add.s32 	%r176, %r175, %r7;
	mad.lo.s32 	%r177, %r55, %r176, %r20;
	add.s32 	%r178, %r177, %r15;
	mul.wide.s32 	%rd29, %r178, 2;
	add.s64 	%rd30, %rd29, %rd9;
	add.s64 	%rd48, %rd30, 1024;
	shl.b64 	%rd31, %rd1, 3;
	shl.b32 	%r179, %r1, 2;
	mad.lo.s32 	%r180, %r18, %r172, %r179;
	add.s32 	%r181, %r180, %r4;
	shl.b32 	%r182, %r2, 2;
	sub.s32 	%r183, %r181, %r182;
	mul.wide.s32 	%rd32, %r183, 4;
	add.s64 	%rd33, %rd31, %rd32;
	add.s64 	%rd47, %rd10, %rd33;
	shl.b64 	%rd4, %rd1, 2;
	mov.b32 	%r363, 0;
	mov.b16 	%rs75, 0x0000;
	mov.b32 	%r362, 1;
	mov.b32 	%r361, -1;
	shl.b32 	%r236, %r32, 1;
	shl.b32 	%r241, %r34, 1;
	mov.u16 	%rs76, %rs75;
	mov.u16 	%rs77, %rs75;
	mov.u16 	%rs78, %rs75;
	mov.u16 	%rs79, %rs75;
	mov.u16 	%rs80, %rs75;
	mov.u16 	%rs81, %rs75;
	mov.u16 	%rs82, %rs75;
$L__BB0_2:                              // =>This Inner Loop Header: Depth=1
	setp.lt.s32 	%p22, %r363, %r29;
	add.s32 	%r232, %r361, 1;
	setp.lt.s32 	%p23, %r232, 2;
	selp.b32 	%r361, %r232, 0, %p23;
	.loc	1 200 20                        // gemm.py:200:20
	cp.async.wait_group 4;
	bar.sync 	0;
	shl.b32 	%r233, %r361, 11;
	add.s32 	%r235, %r102, %r233;
	add.s32 	%r237, %r235, %r236;
	ld.shared.v2.u32 	{%r188, %r208}, [%r237];
	add.s32 	%r238, %r31, %r30;
	shl.b32 	%r239, %r238, 1;
	add.s32 	%r240, %r235, %r239;
	ld.shared.v2.u32 	{%r189, %r209}, [%r240+512];
	add.s32 	%r242, %r235, %r241;
	ld.shared.v2.u32 	{%r190, %r210}, [%r242];
	add.s32 	%r243, %r31, %r33;
	shl.b32 	%r244, %r243, 1;
	add.s32 	%r245, %r235, %r244;
	ld.shared.v2.u32 	{%r191, %r211}, [%r245+512];
	.loc	1 203 20                        // gemm.py:203:20
	shl.b32 	%r246, %r361, 9;
	add.s32 	%r247, %r59, %r246;
	ld.shared.u32 	%r248, [%r247];
	.loc	1 216 24                        // gemm.py:216:24
	shl.b32 	%r249, %r361, 4;
	add.s32 	%r250, %r61, %r249;
	ld.shared.u32 	%r251, [%r250];
	.loc	1 226 25                        // gemm.py:226:25
	shl.b32 	%r252, %r361, 6;
	add.s32 	%r253, %r63, %r252;
	ld.shared.v4.b32 	{%r254, %r255, %r256, %r257}, [%r253];
	.loc	1 229 28                        // gemm.py:229:28
	bfe.u32 	%r258, %r248, 16, 4;
	and.b32  	%r259, %r248, 15;
	bfe.u32 	%r260, %r248, 20, 4;
	bfe.u32 	%r261, %r248, 4, 4;
	bfe.u32 	%r262, %r248, 24, 4;
	bfe.u32 	%r263, %r248, 8, 4;
	bfe.u32 	%r264, %r248, 12, 4;
	shr.u32 	%r265, %r248, 28;
	.loc	1 230 36                        // gemm.py:230:36
	bfe.u32 	%r266, %r251, 16, 4;
	and.b32  	%r267, %r251, 15;
	bfe.u32 	%r268, %r251, 20, 4;
	bfe.u32 	%r269, %r251, 4, 4;
	bfe.u32 	%r270, %r251, 24, 4;
	bfe.u32 	%r271, %r251, 8, 4;
	bfe.u32 	%r272, %r251, 12, 4;
	shr.u32 	%r273, %r251, 28;
	.loc	1 231 17                        // gemm.py:231:17
	sub.s32 	%r274, %r264, %r272;
	sub.s32 	%r275, %r265, %r273;
	sub.s32 	%r276, %r263, %r271;
	sub.s32 	%r277, %r262, %r270;
	sub.s32 	%r278, %r261, %r269;
	sub.s32 	%r279, %r260, %r268;
	sub.s32 	%r280, %r259, %r267;
	sub.s32 	%r281, %r258, %r266;
	.loc	1 231 26                        // gemm.py:231:26
	cvt.rn.f16.s32 	%rs35, %r281;
	cvt.rn.f16.s32 	%rs36, %r280;
	mov.b32 	%r282, {%rs36, %rs35};
	cvt.rn.f16.s32 	%rs37, %r279;
	cvt.rn.f16.s32 	%rs38, %r278;
	mov.b32 	%r283, {%rs38, %rs37};
	cvt.rn.f16.s32 	%rs39, %r277;
	cvt.rn.f16.s32 	%rs40, %r276;
	mov.b32 	%r284, {%rs40, %rs39};
	cvt.rn.f16.s32 	%rs41, %r275;
	cvt.rn.f16.s32 	%rs42, %r274;
	mov.b32 	%r285, {%rs42, %rs41};
	mul.f16x2 	%r286, %r257, %r285;
	mul.f16x2 	%r287, %r256, %r284;
	mul.f16x2 	%r288, %r255, %r283;
	mul.f16x2 	%r289, %r254, %r282;
	st.shared.v4.b32 	[%r35], {%r289, %r288, %r287, %r286};
	bar.sync 	0;
	ld.shared.b16 	%rs43, [%r36];
	ld.shared.b16 	%rs44, [%r36+64];
	ld.shared.b16 	%rs45, [%r36+128];
	ld.shared.b16 	%rs46, [%r36+192];
	ld.shared.b16 	%rs47, [%r38];
	ld.shared.b16 	%rs48, [%r36+1088];
	ld.shared.b16 	%rs49, [%r36+1152];
	ld.shared.b16 	%rs50, [%r36+1216];
	ld.shared.b16 	%rs51, [%r39];
	ld.shared.b16 	%rs52, [%r39+64];
	ld.shared.b16 	%rs53, [%r39+128];
	ld.shared.b16 	%rs54, [%r39+192];
	ld.shared.b16 	%rs55, [%r40];
	ld.shared.b16 	%rs56, [%r39+1088];
	ld.shared.b16 	%rs57, [%r39+1152];
	ld.shared.b16 	%rs58, [%r39+1216];
	.loc	1 235 35                        // gemm.py:235:35
	mov.b32 	%r204, {%rs75, %rs76};
	mov.b32 	%r205, {%rs77, %rs78};
	mov.b32 	%r214, {%rs79, %rs80};
	mov.b32 	%r215, {%rs81, %rs82};
	mov.b32 	%r192, {%rs43, %rs44};
	mov.b32 	%r193, {%rs47, %rs48};
	mov.b32 	%r212, {%rs45, %rs46};
	mov.b32 	%r213, {%rs49, %rs50};
	mov.b32 	%r202, {%rs51, %rs52};
	mov.b32 	%r203, {%rs55, %rs56};
	mov.b32 	%r222, {%rs53, %rs54};
	mov.b32 	%r223, {%rs57, %rs58};
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r204, %r205 }, { %r188, %r189, %r190, %r191 }, { %r192, %r193 }, { %r204, %r205 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r214, %r215 }, { %r188, %r189, %r190, %r191 }, { %r202, %r203 }, { %r214, %r215 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r204, %r205 }, { %r208, %r209, %r210, %r211 }, { %r212, %r213 }, { %r204, %r205 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r214, %r215 }, { %r208, %r209, %r210, %r211 }, { %r222, %r223 }, { %r214, %r215 };
	// end inline asm
	mov.b32 	{%rs75, %rs76}, %r204;
	mov.b32 	{%rs77, %rs78}, %r205;
	mov.b32 	{%rs79, %rs80}, %r214;
	mov.b32 	{%rs81, %rs82}, %r215;
	.loc	1 237 21                        // gemm.py:237:21
	add.s32 	%r290, %r15, %r359;
	.loc	1 197 22                        // gemm.py:197:22
	add.s32 	%r291, %r362, 1;
	setp.lt.s32 	%p24, %r291, 2;
	selp.b32 	%r362, %r291, 0, %p24;
	.loc	1 198 30                        // gemm.py:198:30
	setp.lt.s32 	%p25, %r290, %r55;
	setp.lt.s32 	%p26, %r360, %r55;
	.loc	1 200 20                        // gemm.py:200:20
	shl.b32 	%r292, %r362, 11;
	add.s32 	%r224, %r57, %r292;
	selp.b32 	%r293, 16, 0, %p25;
	selp.b32 	%r294, %r293, 0, %p5;
	selp.b32 	%r225, %r294, 0, %p22;
	// begin inline asm
	cp.async.cg.shared.global [ %r224 + 0 ], [ %rd48 + 0 ], 0x10, %r225;
	// end inline asm
	cp.async.commit_group;
	.loc	1 203 20                        // gemm.py:203:20
	shl.b32 	%r295, %r362, 9;
	add.s32 	%r226, %r59, %r295;
	selp.b32 	%r296, 4, 0, %p26;
	selp.b32 	%r297, %r296, 0, %p6;
	selp.b32 	%r227, %r297, 0, %p22;
	// begin inline asm
	cp.async.ca.shared.global [ %r226 + 0 ], [ %rd47 + 0 ], 0x4, %r227;
	// end inline asm
	cp.async.commit_group;
	.loc	1 211 13                        // gemm.py:211:13
	div.s32 	%r298, %r359, %r56;
	.loc	1 212 54                        // gemm.py:212:54
	mad.lo.s32 	%r299, %r298, %r18, %r17;
	.loc	1 213 33                        // gemm.py:213:33
	setp.lt.s32 	%p27, %r298, %r25;
	.loc	1 215 33                        // gemm.py:215:33
	mul.wide.s32 	%rd38, %r299, 4;
	add.s64 	%rd36, %rd12, %rd38;
	.loc	1 216 24                        // gemm.py:216:24
	shl.b32 	%r300, %r362, 4;
	add.s32 	%r228, %r61, %r300;
	selp.b32 	%r301, 4, 0, %p27;
	selp.b32 	%r302, %r301, 0, %p6;
	selp.b32 	%r229, %r302, 0, %p22;
	// begin inline asm
	@%p1 cp.async.ca.shared.global [ %r228 + 0 ], [ %rd36 + 0 ], 0x4, %r229;
	// end inline asm
	cp.async.commit_group;
	.loc	1 222 47                        // gemm.py:222:47
	mad.lo.s32 	%r303, %r298, %r54, %r19;
	.loc	1 225 35                        // gemm.py:225:35
	mul.wide.s32 	%rd39, %r303, 2;
	add.s64 	%rd37, %rd13, %rd39;
	.loc	1 226 25                        // gemm.py:226:25
	shl.b32 	%r304, %r362, 6;
	add.s32 	%r230, %r63, %r304;
	selp.b32 	%r305, 16, 0, %p27;
	selp.b32 	%r306, %r305, 0, %p7;
	selp.b32 	%r231, %r306, 0, %p22;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r230 + 0 ], [ %rd37 + 0 ], 0x10, %r231;
	// end inline asm
	cp.async.commit_group;
	.loc	1 197 22                        // gemm.py:197:22
	add.s32 	%r363, %r363, 1;
	add.s32 	%r360, %r360, 256;
	add.s32 	%r359, %r359, 256;
	add.s64 	%rd48, %rd48, 512;
	add.s64 	%rd47, %rd47, %rd4;
	setp.ne.s32 	%p28, %r21, %r363;
	@%p28 bra 	$L__BB0_2;
$L__BB0_3:                              // %._crit_edge
	cp.async.wait_group 0;
	bar.sync 	0;
	.loc	1 244 25                        // gemm.py:244:25
	mul.lo.s32 	%r319, %r16, %r54;
	.loc	1 244 21                        // gemm.py:244:21
	mul.wide.s32 	%rd44, %r319, 2;
	add.s64 	%rd45, %rd11, %rd44;
	.loc	1 244 44                        // gemm.py:244:44
	mul.wide.s32 	%rd46, %r19, 2;
	add.s64 	%rd40, %rd45, %rd46;
	add.s64 	%rd41, %rd40, 4;
	add.s64 	%rd42, %rd40, 8;
	add.s64 	%rd43, %rd40, 12;
	.loc	1 245 39                        // gemm.py:245:39
	and.pred  	%p33, %p5, %p7;
	.loc	1 249 30                        // gemm.py:249:30
	shl.b32 	%r320, %r3, 1;
	and.b32  	%r321, %r320, 6;
	shl.b32 	%r322, %r6, 3;
	shl.b32 	%r323, %r8, 3;
	shl.b32 	%r324, %r9, 3;
	or.b32  	%r325, %r322, %r321;
	or.b32  	%r326, %r325, %r323;
	or.b32  	%r327, %r326, %r324;
	or.b32  	%r328, %r327, %r11;
	and.b32  	%r329, %r14, 512;
	or.b32  	%r330, %r328, %r329;
	and.b32  	%r331, %r14, 768;
	or.b32  	%r332, %r322, %r331;
	or.b32  	%r333, %r332, %r323;
	or.b32  	%r334, %r333, %r324;
	or.b32  	%r335, %r334, %r15;
	shr.u32 	%r336, %r330, 2;
	and.b32  	%r337, %r336, 1073741816;
	add.s32 	%r338, %r337, %r330;
	shl.b32 	%r339, %r338, 1;
	add.s32 	%r307, %r102, %r339;
	mov.pred 	%p29, -1;
	// begin inline asm
	@%p29 st.shared.v2.b16 [ %r307 + 0 ], { %rs75, %rs76 };
	// end inline asm
	xor.b32  	%r341, %r330, 256;
	shr.u32 	%r342, %r341, 2;
	and.b32  	%r343, %r342, 1073741816;
	add.s32 	%r344, %r343, %r341;
	shl.b32 	%r345, %r344, 1;
	add.s32 	%r308, %r102, %r345;
	// begin inline asm
	@%p29 st.shared.v2.b16 [ %r308 + 0 ], { %rs77, %rs78 };
	// end inline asm
	xor.b32  	%r346, %r330, 16;
	add.s32 	%r347, %r337, %r346;
	shl.b32 	%r348, %r347, 1;
	add.s32 	%r309, %r102, %r348;
	// begin inline asm
	@%p29 st.shared.v2.b16 [ %r309 + 0 ], { %rs79, %rs80 };
	// end inline asm
	xor.b32  	%r349, %r330, 272;
	shr.u32 	%r350, %r349, 2;
	and.b32  	%r351, %r350, 1073741816;
	add.s32 	%r352, %r351, %r349;
	shl.b32 	%r353, %r352, 1;
	add.s32 	%r310, %r102, %r353;
	// begin inline asm
	@%p29 st.shared.v2.b16 [ %r310 + 0 ], { %rs81, %rs82 };
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r354, %r334, 2;
	and.b32  	%r355, %r354, 248;
	add.s32 	%r356, %r355, %r335;
	shl.b32 	%r357, %r356, 1;
	add.s32 	%r358, %r102, %r357;
	ld.shared.v4.b32 	{%r312, %r314, %r316, %r318}, [%r358];
	// begin inline asm
	mov.u32 %r311, 0x0;
	@%p33 atom.global.gpu.acq_rel.add.noftz.f16x2 %r311, [ %rd40 + 0 ], %r312;
	// end inline asm
	// begin inline asm
	mov.u32 %r313, 0x0;
	@%p33 atom.global.gpu.acq_rel.add.noftz.f16x2 %r313, [ %rd41 + 0 ], %r314;
	// end inline asm
	// begin inline asm
	mov.u32 %r315, 0x0;
	@%p33 atom.global.gpu.acq_rel.add.noftz.f16x2 %r315, [ %rd42 + 0 ], %r316;
	// end inline asm
	// begin inline asm
	mov.u32 %r317, 0x0;
	@%p33 atom.global.gpu.acq_rel.add.noftz.f16x2 %r317, [ %rd43 + 0 ], %r318;
	// end inline asm
	.loc	1 246 4                         // gemm.py:246:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/awq/modules/triton/gemm.py"
	.file	2 "/home/kdog/text-generation-webui/venv/lib/python3.10/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 204                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xc5 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 103                                 // DW_AT_name
.b8 101
.b8 109
.b8 109
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 107
.b8 100
.b8 111
.b8 103
.b8 47
.b8 116
.b8 101
.b8 120
.b8 116
.b8 45
.b8 103
.b8 101
.b8 110
.b8 101
.b8 114
.b8 97
.b8 116
.b8 105
.b8 111
.b8 110
.b8 45
.b8 119
.b8 101
.b8 98
.b8 117
.b8 105
.b8 47
.b8 118
.b8 101
.b8 110
.b8 118
.b8 47
.b8 108
.b8 105
.b8 98
.b8 47
.b8 112
.b8 121
.b8 116
.b8 104
.b8 111
.b8 110
.b8 51
.b8 46
.b8 49
.b8 48
.b8 47
.b8 115
.b8 105
.b8 116
.b8 101
.b8 45
.b8 112
.b8 97
.b8 99
.b8 107
.b8 97
.b8 103
.b8 101
.b8 115
.b8 47
.b8 97
.b8 119
.b8 113
.b8 47
.b8 109
.b8 111
.b8 100
.b8 117
.b8 108
.b8 101
.b8 115
.b8 47
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // Abbrev [2] 0x77:0x12 DW_TAG_subprogram
.b8 97                                  // DW_AT_name
.b8 119
.b8 113
.b8 95
.b8 103
.b8 101
.b8 109
.b8 109
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x89:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 119                                // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x9e:0x18 DW_TAG_inlined_subroutine
.b32 119                                // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 148                                 // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xb6:0x18 DW_TAG_inlined_subroutine
.b32 119                                // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 197                                 // DW_AT_call_line
.b8 33                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
